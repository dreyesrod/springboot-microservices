eureka:
  instance:
    instance-id: ${spring.application.name}:${random.uuid}
logging:
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]){yellow} %clr(:){red} %clr(%m){faint}%n"
#    file: "{\"timestamp\":\"%d{HH:mm:ss.SSS}\",\"level\":\"%p\",\"traceId\":\"%X{traceId:-}\",\"spanId\":\"%X{spanId:-}\",\"appName\":\"${spring.application.name}\",\"message\":\"%m\"}%n"
#  file:
#    path: ${HOME}/${spring.application.name}-${server.port}
management:
  endpoints.web.exposure.include: '*'
  metrics.distribution.percentiles-histogram.http.server.requests: true
  tracing.sampling.probability: 1.0
server:
  port: ${PORT:${SERVER_PORT:0}}
spring:
  application:
    name: auth-service
  datasource:
    driver-class-name: org.postgresql.Driver
    password: postgres
    url: jdbc:postgresql://localhost:5432/jwt_security
    username: postgres
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
    show-sql: true
